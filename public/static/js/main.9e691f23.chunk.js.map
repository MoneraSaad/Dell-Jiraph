{"version":3,"sources":["service/utils.js","img/JiraphLogo.jpg","components/Nav/Nav.js","view/pages/Admin/components/ForgetPassword/ForgetPassword.js","view/pages/Status/components/DashBoardCard/DashBoardCard.jsx","view/pages/Status/components/DashBoard/DashBoard.jsx","view/pages/Status/components/Table/Table.jsx","view/pages/Status/components/Chart/StackedChart.js","view/pages/Status/components/Chart/PieChart.js","view/pages/Status/components/DatePicker/DatePicker.jsx","view/pages/Status/components/StatusPage/StatusPage.jsx","view/pages/Analytics/components/MainTable/MainTable.jsx","view/pages/Analytics/components/charts/Chart.jsx","view/pages/Analytics/components/ModificationByField/ModificationByField.jsx","view/pages/Analytics/components/ChangesInJiraTickets/ChangesInJiraTickets.jsx","view/pages/Analytics/components/ChangesByParentId/ChangesByParentId.jsx","view/pages/Analytics/components/DelaysInDelivery/DelaysInDelivery.jsx","view/pages/Analytics/components/mainPage/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["exports","isEmpty","obj","key","hasOwnProperty","module","props","location","useLocation","pathname","className","href","rel","src","logo","alt","to","Forgotpassword","useHistory","id","onSubmit","e","preventDefault","email","target","elements","sendToMailInput","value","fetch","method","body","JSON","stringify","headers","then","res","json","data","success","error","info","parentElement","children","style","display","console","log","name","placeholder","type","DashBoardCard","cardsContentItem","number","DashBoard","cardsContent","map","index","TasksTable","openTasks","modificationFieldOptions","selectOptions","modificationTypeOptions","modificationFieldValueOptions","onDoneClick","onSelect","tableFilters","onTableFilterClick","disableSelect","options","onChange","filter","filterObj","isDisabled","scope","task","jiraItem","jiraId","jiraName","diffItem","updatedField","fieldName","oldValue","newValue","onClick","_id","StackedChart","stackedChart","chart","height","stacked","width","series","PieChart","dataPieChart","marginLeft","DatePicker","onDateClick","label","htmlFor","currentTarget","timeLabelOptions","StatusPage","useState","setCardsContent","setOpenTasks","setStackedChart","typePieChart","setTypePieChart","fieldPieChart","setFieldPieChart","setModificationTypeOptions","setModificationFieldOptions","modificationNamePieOptions","setModificationNamePieOptions","setModificationFieldValueOptions","setChartFilters","setStartDate","setEndDate","setTimeLabel","setTableFilters","useEffect","alert","doc","Data","handleDoneClick","a","result","openTask","userId","handleDateClick","date","newFilters","f","MainTable","changes","tasks","jiraType","priority","status","jiraParentId","functionalTest","qaRepresentative","fixVersion","qcItem","requirementId","requirementType","updateTime","Chart","UiObjs","setTasks","length","columns","arr","column","size","maxLength","handleClick","ModificationByField","serverFilters","values","startDate","endDate","setFieldNameOptions","labels","render","setUiObjs","fieldNameOptions","valueOptions","setValueOptions","qaRepresentativeOptions","setQaRepresentativeOptions","change","QA","Values","renderFilters","isMulti","ChangesInJiraTickets","setStatusOptions","statusOptions","labelOptions","Date","setMonth","getMonth","val","Qa","ChangesByParentId","fixVersionOptions","setfixVersionOptions","version","DelaysInDelivery","jiraTypeOptions","setJiraTypeOptions","Jira","JiraType","MainPage","path","App","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e691f23.chunk.js","sourcesContent":["exports.isEmpty = (obj) => {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/JiraphLogo.4ddabadb.jpg\";","import React from 'react';\r\nimport './Nav.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useLocation\r\n\r\n} from \"react-router-dom\";\r\n\r\n//icons\r\nimport logo from \"../../img/JiraphLogo.jpg\"\r\n\r\nexport default props => {\r\n\r\n    let location = useLocation().pathname;\r\n  \r\n    return (\r\n        <nav className=\"sidebar\">\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"></link>\r\n            <div className=\"sidebar__header-wrapper\">\r\n                <img className=\"jiraph__logo\" src={logo} alt=\"this is a logo\" />\r\n           JIRAPH\r\n          </div>\r\n\r\n            <div className=\"menu__wrapper\">\r\n\r\n                <div className='menu__item'>\r\n                    <Link className={location === \"/register\"?'menu__link menu__link--selected':\"menu__link\"} to=\"/register\">Register</Link>\r\n                </div>\r\n                <div className=\"menu__item\">\r\n                    <Link className={location === \"/Admin\"?'menu__link menu__link--selected':\"menu__link\"} to=\"/Admin\">Admin</Link>\r\n                </div>\r\n\r\n                <div className=\"menu__item\">\r\n                    <Link className={location === \"/status\"?'menu__link menu__link--selected':\"menu__link\"} to=\"/status\">Status</Link>\r\n                </div>\r\n\r\n                <div className=\"menu__item\">\r\n                    <Link className=\"menu__link\" to=\"/analysis\">Analysis</Link>\r\n                    <div className=\"analysis-options\">\r\n\r\n                        <div className=\"analysis__item\">\r\n                            <Link className={location === \"/ModificationByField\"?'menu__subLink menu-subLink--selected':\"menu__subLink\"} to=\"/ModificationByField\">Modification By Field</Link>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"analysis__item\">\r\n                            <Link className={location === \"/DeletedJiraTickets\"?'menu__subLink menu-subLink--selected':\"menu__subLink\"} to=\"/DeletedJiraTickets\">Deleted Jiras</Link>\r\n                        </div>\r\n                        <div className=\"analysis__item\">\r\n                            <Link className={location === \"/ChangesInJiraTickets\"?'menu__subLink menu-subLink--selected':\"menu__subLink\"} to=\"/ChangesInJiraTickets\">Changes In Jira Tickets</Link>\r\n                        </div>\r\n                        <div className=\"analysis__item\">\r\n                            <Link className={location === \"/ChangesInParentID\"?'menu__subLink menu-subLink--selected':\"menu__subLink\"} to=\"/ChangesInParentID\">Changes In Parent ID</Link>\r\n                        </div>\r\n                        <div className=\"analysis__item\">\r\n                            <Link className={location === \"/DelaysInDelivery\"?'menu__subLink menu-subLink--selected':\"menu__subLink\"} to=\"/DelaysInDelivery\">Delays In Delivery</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__footer\">\r\n                FOOTER\r\n          </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './ForgetPassword.css'\r\nfunction Forgotpassword(props) {\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className='forgotpassword'>\r\n            <h2>Password Reset</h2>\r\n            <form id=\"sendToMailForm\" onSubmit={onSendToMail} >\r\n                <input id=\"sendToMailInput\" name=\"sendToMailInput\" placeholder=\"1. enter your login Emailadress\"></input>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            <form id=\"confirmCodeForm\" onSubmit={onConfirmCode} >\r\n                <input id=\"confCodeInp\" name=\"confCodeInp\" placeholder=\"Enter your confirmation code\"></input>\r\n                <button type=\"submit\">Confirm</button>\r\n            </form>\r\n            <form id=\"resetPasswordForm\" onSubmit={onResetPassword} >\r\n                <input id=\"resetNPswInp\" name=\"resetNPswInp\" placeholder=\"Choose a new Password\"></input>\r\n                <input id=\"confirmNPswInp\" name=\"confirmNPswInp\" placeholder=\"confirm the new Password\"></input>\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n    // function to send the confirmation code to email\r\n    function onSendToMail(e) {\r\n        e.preventDefault();\r\n\r\n        const { sendToMailInput } = e.target.elements;\r\n        const email = sendToMailInput.value;\r\n\r\n\r\n        fetch(\"/api/users/forgotPassword\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ email }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const { success } = data;\r\n                const { error } = data;\r\n                const { info } = data;\r\n                if (success == true) {\r\n                    e.target.parentElement.children[1].style.display = \"none\";\r\n                    e.target.parentElement.children[2].style.display = \"initial\";\r\n                    e.target.parentElement.children[3].style.display = \"none\";\r\n                }\r\n                else {\r\n                    console.log(error)\r\n                }\r\n            });\r\n    }\r\n    // function to confirm the received code is correct\r\n    function onConfirmCode(e) {\r\n        e.preventDefault();\r\n        e.target.parentElement.children[1].style.display = \"none\";\r\n        e.target.parentElement.children[2].style.display = \"none\";\r\n        e.target.parentElement.children[3].style.display = \"initial\";\r\n    }\r\n    // function to reset the forotten password\r\n    function onResetPassword(e) {\r\n    }\r\n}\r\nexport default Forgotpassword;","import React from 'react';\r\nimport \"./DashBoardCard.css\";\r\n\r\n\r\nfunction DashBoardCard({cardsContentItem}) {\r\n    \r\n    return (\r\n        <div>\r\n            \r\n                \r\n                 <div className=\"DashBoard__Card\">\r\n                        <h2 className=\"DashBoard__CardTitle\">{cardsContentItem.name}</h2>\r\n                        <h5 className=\"DashBoard__CardContent\">{cardsContentItem.number}</h5>\r\n                    </div>\r\n                   \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashBoardCard;","import React from \"react\";\r\nimport \"./DashBoard.css\";\r\nimport DashBoardCard from \"../DashBoardCard/DashBoardCard\";\r\n\r\nconst DashBoard = ({ cardsContent }) => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {cardsContent.map((cardsContentItem, index) => {\r\n        return (\r\n          <DashBoardCard key={index} cardsContentItem={cardsContentItem} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Select from \"react-select\";\r\n\r\nexport default function TasksTable({\r\n  openTasks,\r\n  selectOptions,\r\n  modificationFieldOptions,\r\n  modificationTypeOptions,\r\n  modificationFieldValueOptions,\r\n  onDoneClick,\r\n  onSelect,\r\n  onTableFilterClick,\r\n  tableFilters,\r\n}) {\r\n  const disableSelect = () => {\r\n    return tableFilters[0].value !== \"Update\" ? true : false;\r\n  };\r\n  return (\r\n    <div className=\"open-tasks\">\r\n      <div className=\"open-tasks-title\">\r\n        <h3> Open Tasks </h3>\r\n      </div>\r\n      <div className=\"container__filterSelect\">\r\n        <Select\r\n          options={modificationTypeOptions}\r\n          className=\"filterSelect\"\r\n          onChange={(filter, name) => onSelect(filter, \"modificationType\")}\r\n        />\r\n        <Select\r\n          options={modificationFieldOptions}\r\n          className=\"filterSelect\"\r\n          onChange={(filterObj, name) =>\r\n            onSelect(filterObj, \"modificationField\")\r\n          }\r\n          isDisabled={disableSelect()}\r\n        />\r\n        <Select\r\n          options={modificationFieldValueOptions}\r\n          className=\"filterSelect\"\r\n          onChange={(filter, name) => onSelect(filter, \"modificationValue\")}\r\n          isDisabled={disableSelect()}\r\n        />\r\n      </div>\r\n      <div className=\"open-tasks-table\">\r\n        <table className=\"container\">\r\n          <thead className=\"header__table\">\r\n            <tr>\r\n              <th scope=\"col\"> # </th> <th scope=\"col\"> Id </th>\r\n              <th scope=\"col\"> Jira Name </th> <th scope=\"col\"> Type </th>\r\n              <th scope=\"col\"> Field Name </th> <th scope=\"col\"> Old Val </th>\r\n              <th scope=\"col\"> New Val </th> <th scope=\"col\"> Done </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {openTasks.map((task, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\"> {++index} </th>\r\n                <td> {task.jiraItem.jiraId} </td>\r\n                <td> {task.jiraItem.jiraName} </td>\r\n                <td> {task.diffItem.type} </td>\r\n                <td> {task.diffItem.updatedField.fieldName} </td>\r\n                <td> {task.diffItem.updatedField.oldValue} </td>\r\n                <td> {task.diffItem.updatedField.newValue} </td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onClick={() => onDoneClick(task.jiraItem.jiraId)}\r\n                    key={task._id}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { isEmpty } from \"../../../../../service/utils\";\r\n\r\n\r\n\r\nexport default function StackedChart({ stackedChart }) {\r\n  if (!isEmpty(stackedChart)) {\r\n    stackedChart.options.chart = {\r\n      type: \"bar\",\r\n      height: 350,\r\n      stacked: true,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"daily_chart\" style={{ width: \"100%\" }}>\r\n      {!isEmpty(stackedChart) && (\r\n        <Chart\r\n          options={stackedChart.options}\r\n          height=\"450\"\r\n          series={stackedChart.series}\r\n          type=\"bar\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { isEmpty } from \"../../../../../service/utils\";\r\n\r\nconst PieChart = ({ name, dataPieChart }) => {\r\n  let selectName = name;\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      {!isEmpty(dataPieChart) && (\r\n        <Chart\r\n          options={dataPieChart.options}\r\n          series={dataPieChart.series}\r\n          type=\"donut\"\r\n          style={{\r\n            marginLeft: -30,\r\n          }}\r\n          width=\"350\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport \"./DatePicker.css\";\r\n\r\nexport default function DatePicker({ onDateClick, name, label }) {\r\n  return (\r\n    <div className=\"datePicker\">\r\n      <label htmlFor={name} className=\"datePicker__label\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        type=\"date\"\r\n        name={name}\r\n        onChange={(e) => onDateClick(e.currentTarget)}\r\n        className=\"datePicker__input\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DashBoard from \"../DashBoard/DashBoard\";\r\nimport Table from \"../Table/Table.jsx\";\r\nimport StackedChart from \"../Chart/StackedChart\";\r\nimport PieChart from \"../Chart/PieChart\";\r\nimport DatePicker from \"../DatePicker/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport \"./StatusPage.css\";\r\n\r\nconst timeLabelOptions = [\r\n  { value: \"daily\", label: \"Daily\" },\r\n  { value: \"weekly\", label: \"Weekly\" },\r\n  { value: \"monthly\", label: \"Monthly\" },\r\n];\r\nconst StatusPage = (props) => {\r\n  const [cardsContent, setCardsContent] = useState([]);\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [filterTypePie, setFilterTypePie] = useState(\"all\");\r\n  const [filterFieldPie, setFilterFieldPie] = useState(\"all\");\r\n  const [barChart, setBarChart] = useState({});\r\n  const [stackedChart, setStackedChart] = useState({});\r\n  const [typePieChart, setTypePieChart] = useState({});\r\n  const [fieldPieChart, setFieldPieChart] = useState({});\r\n  const [modificationTypeOptions, setModificationTypeOptions] = useState({});\r\n  const [modificationFieldOptions, setModificationFieldOptions] = useState({});\r\n  const [modificationNamePieOptions, setModificationNamePieOptions] = useState(\r\n    {}\r\n  );\r\n  const [\r\n    modificationFieldValueOptions,\r\n    setModificationFieldValueOptions,\r\n  ] = useState({});\r\n  const [chartFilters, setChartFilters] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [timeLabel, setTimeLabel] = useState(\"\");\r\n  const [tableFilters, setTableFilters] = useState([\r\n    { name: \"modificationType\", value: \"\" },\r\n    { name: \"modificationField\", value: \"\" },\r\n    { name: \"modificationValue\", value: \"\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/status/dailyalerts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setCardsContent(info);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/status/openTasks\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setOpenTasks(info.doc);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n  //firstchart\r\n  useEffect(() => {\r\n    fetch(\"/api/status/stackedChart\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setStackedChart(info);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/status/TypePie\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setTypePieChart(info);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    fetch(\"/api/status/fieldPie\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setFieldPieChart(info);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // const newFilters =\r\n    //   filters[0].value === \"Update\" ? [...filters] : [{ ...filters[0] }];\r\n    fetch(\"/api/status/modificationTypeOptions\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        if (success) {\r\n          setModificationTypeOptions(info.Data);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      tableFilters[0].name === \"modificationType\" &&\r\n      tableFilters[0].value === \"Update\"\r\n    ) {\r\n      fetch(\"/api/status/modificationFieldOptions\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          let { success, error, info } = data;\r\n          if (success) {\r\n            setModificationFieldOptions(info.Data);\r\n          } else {\r\n            alert(error);\r\n          }\r\n        });\r\n    }\r\n  }, [tableFilters]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/status/getFieldName\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { success, error, info } = data;\r\n        setModificationNamePieOptions(info.Data);\r\n      });\r\n  }, []);\r\n\r\n  // setFieldPieChart(pieTypeDummyData);\r\n  const handleDoneClick = async (jiraId) => {\r\n    try {\r\n      const userId = null;\r\n      const result = openTasks.filter(\r\n        (openTask) => openTask.jiraItem.jiraId !== jiraId\r\n      );\r\n      setOpenTasks(result);\r\n\r\n      await fetch(\"/api/status/updateTasks\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ jiraId, userId }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  const handlemodificationTypePieSelect = (filter, name) => {\r\n    if (name === \"pie1\") setFilterTypePie(filter.value);\r\n    if (name === \"pie2\") setFilterFieldPie(filter.value);\r\n  };\r\n  //date\r\n  const handleDateClick = (date) => {\r\n    const { name, value } = date;\r\n    name === \"startDate\" ? setStartDate(value) : setEndDate(value);\r\n    //typechart ---> RAWAD\r\n    // await fetch(\"/api/status/typePieChartFilter\", {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify({\r\n    //     filterTypePie,\r\n    //     CurrentstartDate,\r\n    //     CurrentEndtDate,\r\n    //   }),\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {\r\n    //     let { success, error, info } = data;\r\n    //     if (success) {\r\n    //       setBarChart(info);\r\n    //     } else {\r\n    //       alert(error);\r\n    //     }\r\n    //   });\r\n    // // fieldpiechart\r\n    // await fetch(\"/api/status/fieldPieChart\", {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify({\r\n    //     filterFieldPie,\r\n    //     CurrentstartDate,\r\n    //     CurrentEndtDate,\r\n    //   }),\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {\r\n    //     let { success, error, info } = data;\r\n    //     if (success) {\r\n    //       setBarChart(info);\r\n    //     } else {\r\n    //       alert(error);\r\n    //     }\r\n    //   });\r\n    // //first barchart\r\n    // await fetch(\"/api/status/filterStackedChart\", {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify({\r\n    //     label: \"daily\",\r\n    //     datefrom: CurrentstartDate,\r\n    //     dateTo: CurrentEndtDate,\r\n    //   }),\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {\r\n    //     let { success, error, info } = data;\r\n    //     if (success) {\r\n    //       // setStackedChart(info);\r\n    //     } else {\r\n    //       alert(error);\r\n    //     }\r\n    //   });\r\n  };\r\n\r\n  const handleSelect = (filter, name) => {\r\n    const newFilters = [...tableFilters].map((f) => {\r\n      if (f.name === name) {\r\n        f.value = filter.value;\r\n      }\r\n      return f;\r\n    });\r\n    if (name === \"modificationField\") {\r\n      newFilters[2].value = null;\r\n    }\r\n    if (name === \"modificationType\") {\r\n      newFilters[1].value = null;\r\n      newFilters[2].value = null;\r\n    }\r\n    setTableFilters(newFilters);\r\n    fetch(\"/api/status/modificationFieldValueOptions\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ ...tableFilters }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let { success, error, info } = res;\r\n        if (success) {\r\n          setModificationFieldValueOptions(info);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n\r\n    fetch(\"/api/status/filltersAllSubmit\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ ...tableFilters }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let { success, error, info } = res;\r\n        if (success) {\r\n          setOpenTasks(info.doc);\r\n        } else {\r\n          alert(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  // const handelTableFilterClick = () => {\r\n  //   const newFilters =\r\n  //     filters[0].value === \"Update\" ? [...filters] : [{ ...filters[0] }];\r\n\r\n  //   //fetch\r\n  // };\r\n\r\n  return (\r\n    <div className=\"statusPageContainer\">\r\n      <div className=\"statusPage__dashboard\">\r\n        <DashBoard cardsContent={cardsContent} />\r\n      </div>\r\n      <div className=\"statusPage__charts\">\r\n        <div className=\"statusPage__barChart\">\r\n          <div className=\"statusPage__barChart__filters\">\r\n            <Select\r\n              options={timeLabelOptions}\r\n              onChange={(filter) => setTimeLabel(filter)}\r\n              className=\"filterSelect\"\r\n            />\r\n            <DatePicker\r\n              onDateClick={handleDateClick}\r\n              name=\"startDate\"\r\n              label=\"From:\"\r\n              placeholder=\"Select End Date\"\r\n            />\r\n            <DatePicker\r\n              onDateClick={handleDateClick}\r\n              name=\"endDate\"\r\n              label=\"To:\"\r\n              placeholder=\"Select End Date\"\r\n            />\r\n          </div>\r\n          <StackedChart stackedChart={stackedChart} />\r\n        </div>\r\n\r\n        <div className=\"statusPage__pieCharts\">\r\n          <div className=\"statusPage__pieChart\">\r\n            <Select\r\n              options={modificationTypeOptions}\r\n              onChange={(filter) => setChartFilters(filter)}\r\n              className=\"filterSelect filterSelect-pie\"\r\n            />\r\n            <PieChart dataPieChart={typePieChart} name=\"pie1\" />\r\n          </div>\r\n          <div className=\"statusPage__pieChart\">\r\n            <Select\r\n              options={modificationNamePieOptions}\r\n              onChange={(filter) => setChartFilters(filter)}\r\n              className=\"filterSelect filterSelect-pie\"\r\n            />\r\n            <PieChart dataPieChart={fieldPieChart} name=\"pie2\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"statusPage__table\">\r\n        <Table\r\n          modificationFieldValueOptions={modificationFieldValueOptions}\r\n          modificationFieldOptions={modificationFieldOptions}\r\n          modificationTypeOptions={modificationTypeOptions}\r\n          openTasks={openTasks}\r\n          onDoneClick={handleDoneClick}\r\n          onSelect={handleSelect}\r\n          tableFilters={tableFilters}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default StatusPage;\r\n","import React from 'react';\r\nimport \"./MainTable.css\";\r\n\r\n\r\nfunction MainTable(props) {\r\n\r\n\r\n  const { changes } = props;\r\n  const {tasks} = props\r\n  return (\r\n\r\n    <div className='MainTable'>\r\n      <div className=\"MainTable__Header\"></div>\r\n      <div className=\"MainTable__Cell\">Jira ID</div>\r\n      <div className=\"MainTable__Cell\">Jira Name</div>\r\n      <div className=\"MainTable__Cell\">Jira Type</div>\r\n      <div className=\"MainTable__Cell\">Jira Priority</div>\r\n      <div className=\"MainTable__Cell\">Jira Item Status</div>\r\n      <div className=\"MainTable__Cell\">jira Parent Id</div>\r\n      <div className=\"MainTable__Cell\">Functional Test</div>\r\n      <div className=\"MainTable__Cell\">Qa Representative</div>\r\n      <div className=\"MainTable__Cell\">Fix Version</div>\r\n      <div className=\"MainTable__Cell\">Qc Requirement Id</div>\r\n      <div className=\"MainTable__Cell\">Qc Requirement Type</div>\r\n      <div className=\"MainTable__Cell\">QC Status</div>\r\n\r\n      {changes &&  <div className=\"MainTable__Cell\">Updated Time</div>}\r\n      {changes &&  <div className=\"MainTable__Cell\">Field Name</div>}\r\n      {changes &&  <div className=\"MainTable__Cell\">Old Value</div>}\r\n      {changes &&  <div className=\"MainTable__Cell\">New Value</div>}\r\n      \r\n\r\n\r\n\r\n\r\n      <div className=\"MainTable__Body\" />\r\n\r\n      {tasks && tasks.map((task,index) => {\r\n        return (\r\n          \r\n          <div key={index} className=\"MainTable__Row\">\r\n\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.jiraId}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.jiraName}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.jiraType}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.priority}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.status}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.jiraParentId}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.functionalTest}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.qaRepresentative}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.jiraItem.fixVersion}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.qcItem.requirementId}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.qcItem.requirementType}</div>\r\n            <div className=\"MainTable__Body__Cell\">{task.qcItem.status}</div>\r\n\r\n            {changes &&  <div className=\"MainTable__Body__Cell\">{task.diffItem.updateTime}</div>}\r\n            {changes &&  <div className=\"MainTable__Body__Cell\">{task.diffItem.updatedField.fieldName}</div>}\r\n            {changes &&  <div className=\"MainTable__Body__Cell\">{task.diffItem.updatedField.oldValue}</div>}\r\n            {changes &&  <div className=\"MainTable__Body__Cell\">{task.diffItem.updatedField.newValue}</div>}\r\n\r\n          </div>\r\n\r\n\r\n        )\r\n      })}\r\n\r\n    </div >\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default MainTable;","import React from 'react';\r\nimport \"./Chart.css\";\r\nimport MainTable from \"../MainTable/MainTable\"\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Chart(props) {\r\n  const { UiObjs } = props;\r\n  const [tasks, setTasks] = useState([]);\r\n  const handleClick = tasks => {\r\n    return setTasks(tasks)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"chart__Wrapper\">\r\n              <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"></link>\r\n      <div className=\"chart\">\r\n      {UiObjs.length > 0 && UiObjs.map((columns, index) => {\r\n        return (\r\n          <div\r\n            className='chart__column' key={index}\r\n            // style={{ height: \"100%\" }}\r\n            >\r\n            <div  className=\"chart__Each_column\">\r\n              {columns.arr.length > 0 && columns.arr.map((column, index) => {\r\n                return (\r\n                  <div key={index} style={{height:`${(column.size / columns.maxLength) * 100}%`}} onClick={() => handleClick(column.tasks)}  className=\"chart__innerColumn\">\r\n                    {column.size}\r\n                  </div>\r\n                )\r\n              })}\r\n             </div>\r\n             <div className='chart__label'>\r\n                  {columns._id}\r\n                </div>\r\n          </div>\r\n          \r\n\r\n        )\r\n      })}\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"ModificationByFieldTable\">\r\n        {tasks && <MainTable changes={true} tasks={tasks} />}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Chart;","import React, { useEffect } from 'react';\r\nimport \"./ModificationByField.css\";\r\nimport { useState } from 'react';\r\n\r\nimport Select from \"react-select\"\r\nimport Chart from \"../charts/Chart\"\r\n// import ApexChart from \"../ApexChart/ApexChart\"\r\n\r\n\r\n\r\n\r\nfunction ModificationByField(props) {\r\n  const serverFilters = { fieldName: [], values: [], qaRepresentative: [], startDate: [], endDate: [], label: [\"weekly\"] };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    fetch('/api/analytics/modificationByFieldFilters', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ fieldName: serverFilters.fieldName }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n\r\n        setFieldNameOptions(data[0].labels)\r\n        console.log(data);\r\n      })\r\n  },[])\r\n\r\n  const render = (serverFilters) => {\r\n    fetch('/api/analytics/modificationByField', {\r\n      method: 'POST',\r\n      body: JSON.stringify(serverFilters),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { setUiObjs(data) })\r\n  }\r\n\r\n\r\n  const renderFilters = (serverFilters) => {\r\n    fetch('/api/analytics/modificationByFieldFilters', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ fieldName: serverFilters.fieldName }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          console.log(data)\r\n          setQaRepresentativeOptions(data[0].QA);\r\n          setValueOptions(data[0].Values);\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n\r\n  const [UiObjs, setUiObjs] = useState([]);\r\n  const [fieldNameOptions, setFieldNameOptions] = useState([]);\r\n  const [valueOptions, setValueOptions] = useState([]);\r\n  const [qaRepresentativeOptions, setQaRepresentativeOptions] = useState([]);\r\n  const labelOptions = [\r\n    { label: \"daily\" },\r\n    { label: \"weekly\" },\r\n    { label: \"monthly\" },\r\n    { label: \"yearly\" }\r\n  ];\r\n\r\n\r\n  const handleChangeLabel = (change => {\r\n    serverFilters.label = [change.value]\r\n    render(serverFilters);\r\n  })\r\n\r\n  const handleChangeFieldName = (change => {\r\n    serverFilters.fieldName = [change.label];\r\n    renderFilters(serverFilters);\r\n  })\r\n\r\n  const handleChangeValues = (change => {\r\n    console.log(change)\r\n    if (change!=null)\r\n    serverFilters.values = [change.label];\r\n    else \r\n    serverFilters.values = [];\r\n    render(serverFilters);\r\n  })\r\n\r\n  const handleChangeQaRepresentative = (change => {\r\n    serverFilters.qaRepresentative = [change.label];\r\n    render(serverFilters);\r\n  })\r\n  const handleChangeStartDate = (change => {\r\n    serverFilters.startDate = [change.target.value];\r\n    render(serverFilters);\r\n  })\r\n\r\n  const handleChangeEndDate = (change => {\r\n    serverFilters.endDate = [change.target.value];\r\n    render(serverFilters);\r\n  })\r\n\r\n  return (\r\n    <div className='ModificationByField__Wrapper'>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"></link>\r\n      <div className=\"ModificationByField__Chart\"> {UiObjs.length > 0 && <Chart UiObjs={UiObjs} />}</div>\r\n      <div className=\"ModificationByField__MainTitle\">Modification By Field</div>\r\n\r\n      <div className=\"ModificationByField__Filters\">\r\n\r\n\r\n        <Select\r\n          name=\"fieldName\"\r\n          onChange={handleChangeFieldName}\r\n          placeholder=\"fieldName\"\r\n          className=\"ModificationByField__Filter\"\r\n          options={fieldNameOptions} />\r\n\r\n        <Select\r\n          name=\"value\"\r\n          onChange={handleChangeValues}\r\n          isMulti\r\n          placeholder=\"Value\"\r\n          className=\"ModificationByField__Filter\"\r\n          options={valueOptions} />\r\n\r\n        <Select\r\n          name=\"qaRepresentative\"\r\n          onChange={handleChangeQaRepresentative}\r\n          placeholder=\"Qa Rep\"\r\n          className=\"ModificationByField__Filter\"\r\n          options={qaRepresentativeOptions} />\r\n\r\n        <input\r\n          className=\"ModificationByField__Filter\"\r\n          type=\"date\"\r\n          name=\"startDate\"\r\n          onChange={handleChangeStartDate}\r\n        />\r\n\r\n\r\n        <input\r\n          className=\"ModificationByField__Filter\"\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          onChange={handleChangeEndDate}\r\n        />\r\n\r\n\r\n        <Select\r\n          name=\"label\"\r\n          onChange={handleChangeLabel}\r\n          placeholder=\"Label\"\r\n          className=\"ModificationByField__Filter\"\r\n          options={labelOptions} />\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ModificationByField;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport \"./ChangesInJiraTickets.css\";\r\n\r\n//Components \r\nimport Select from 'react-select'\r\nimport Chart from \"../charts/Chart\"\r\n\r\n\r\n\r\nfunction ChangesInJiraTickets() { \r\n\r\n   // Options To Send == > Server \r\n  const serverFilters = {\r\n    values: [],\r\n    status: [],\r\n    qaRepresentative: [],\r\n    startDate: [], // date1MonthAgo\r\n    endDate: [], // date\r\n    label: [\"weekly\"]\r\n  };\r\n  \r\n  // Functions ==> Fetch : \r\n\r\n  useEffect(() => {\r\n\r\n    fetch('/api/analytics/changeOfJIRATicketsStatusFilters')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n\r\n        \r\n        setStatusOptions(data[0].labels);\r\n        // setQaRepresentativeOptions(data[0].qa);\r\n\r\n      })\r\n\r\n      /*fetch('/api/analytics/changeOfJIRATicketsStatus')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n\r\n        //set state (UiObj)\r\n        setUiObjs(data);\r\n      })*/\r\n\r\n  }, [])\r\n\r\n\r\n  const render = (serverFilters) => {\r\n    fetch('/api/analytics/changeOfJIRATicketsStatus', {\r\n      method: 'POST',\r\n      body: JSON.stringify(serverFilters),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { console.log(data) } )\r\n\r\n  }\r\n\r\n  // const renderFilters = (serverFilters) => {\r\n  //   fetch('/api/analytics/modificationByFieldFilters', {\r\n  //     method: 'POST',\r\n  //     body: JSON.stringify({ status:serverFilters.status }),\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\"\r\n  //     }\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => { \r\n  //       if(data.length>0){\r\n  //         console.log(data)\r\n  //               setQaRepresentativeOptions(data[0].QA);\r\n                \r\n  //       }\r\n                 \r\n  //     })\r\n  // }\r\n\r\n   // To set UiObj from the filtered Data we recieved from server \r\n   const [UiObjs, setUiObjs] = useState([]);\r\n\r\n   // Options To get From Server \r\n \r\n   const [statusOptions, setStatusOptions] = useState([])\r\n   const [qaRepresentativeOptions, setQaRepresentativeOptions] = useState([])\r\n \r\n   const [valueOptions, setValueOptions] = useState([\r\n     { value: \"newValue\", label: \"New Value\" },\r\n     { value: \"oldValue\", label: \"Old Value\" }\r\n   ])\r\n \r\n   const [labelOptions, setLabelOptions] = useState([\r\n     { name: \"label\", value: \"daily\", label: \"Daily\" },\r\n     { name: \"label\", value: \"weekly\", label: \"Weekly\" },\r\n     { name: \"label\", value: \"monthly\", label: \"Monthly\" },\r\n     { name: \"label\", value: \"yearly\", label: \"Yearly\" }\r\n   ])\r\n \r\n\r\n  // Default Date\r\n  const date = new Date()\r\n  const date1MonthAgo = new Date(new Date().setMonth(date.getMonth() - 1));\r\n\r\n\r\n\r\n  // Filters onChange Functions \r\n\r\n  const HandleValuesChange = (val => {\r\n    serverFilters.values = [val.value]\r\n    render(serverFilters);\r\n  })\r\n\r\n\r\n  const HandleStatusChange = (status => {\r\n    serverFilters.status = [status.label]\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleqaRepresentativeChange = (Qa => {\r\n    serverFilters.qaRepresentative = [Qa.label]\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleStartDateChange = (date => {\r\n    serverFilters.startDate = [date.target.value]\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleEndDateChange = (date => {\r\n    serverFilters.endDate = [date.target.value]\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleLabelChange = (label => {\r\n    serverFilters.label = [label.value]\r\n    render(serverFilters);\r\n  })\r\n\r\n  return (\r\n\r\n    <div className='ChangeOfJiraTicketWrapper'>\r\n      <div className=\"ChangeOfJiraTicket__Chart\"> \r\n      { UiObjs.length > 0 && <Chart UiObjs={UiObjs} />  } \r\n      </div>\r\n\r\n      <div className=\"ChangeOfJiraTicket__Title\">Changes Of Jira Tickets</div>\r\n\r\n      {/* Select Filters */}\r\n\r\n      <form className=\"ChangeOfJiraTicket__Filters\">\r\n\r\n        <Select\r\n          name=\"oldNew\"\r\n          options={valueOptions}\r\n          placeholder=\"old/new \"\r\n          className=\"ChangeOfJiraTicket__Filter\"\r\n          onChange={HandleValuesChange}\r\n        />\r\n\r\n        <Select\r\n          name=\"status\"\r\n          isMulti\r\n          options={statusOptions}\r\n          placeholder=\"Status \"\r\n          className=\"ChangeOfJiraTicket__Filter\"\r\n          onChange={HandleStatusChange}\r\n        />\r\n\r\n        <Select\r\n          name=\"qaRepresentative\"\r\n          isMulti\r\n          options={qaRepresentativeOptions}\r\n          placeholder=\"Qa Representative \"\r\n          className=\"DelaysInDelivery__Filter\"\r\n          onChange={HandleqaRepresentativeChange}\r\n        />\r\n\r\n        <input\r\n          className=\"ChangeOfJiraTicket__Filter\"\r\n          type=\"date\"\r\n          name=\"startDate\"\r\n          onChange={HandleStartDateChange}\r\n        />\r\n\r\n        <input\r\n          className=\"ChangeOfJiraTicket__Filter\"\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          onChange={HandleEndDateChange}\r\n        />\r\n\r\n        <Select\r\n          name=\"labels\"\r\n          options={labelOptions}\r\n          placeholder=\"Label\"\r\n          className=\"ChangeOfJiraTicket__Filter\"\r\n          onChange={HandleLabelChange}\r\n        />\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ChangesInJiraTickets;","import React from 'react';\r\nimport \"./ChangesByParentId.css\";\r\nimport Select from 'react-select'\r\nimport { useState , useEffect } from 'react';\r\n\r\n\r\n\r\nfunction ChangesByParentId() {\r\n  const serverFilters={fixVersion:[],startDate:[],endDate:[]};\r\n  \r\n  // const [UiObjs, setUiObjs] = useState([]);\r\n  \r\n   // Options To get From Server \r\n   const [fixVersionOptions,setfixVersionOptions]=useState([])\r\n\r\n  // Functions ==> Fetch :\r\n  const render = (serverFilters)=> {\r\n    fetch('/api/analytics/ChangesByParentId/', {\r\n        method: 'POST',\r\n        body: JSON.stringify(serverFilters),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => { console.log(data) })\r\n      } \r\n      \r\n  useEffect(() => {\r\n    fetch('/api/analytics/')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        setfixVersionOptions(data);\r\n      })\r\n}, [])\r\n\r\n  const HandlefixVersionChange=(version=>{\r\n    serverFilters.fixVersion=[version.label];\r\n    render (serverFilters);\r\n})\r\n\r\n    const HandleStartDateChange=(date=>{\r\n      serverFilters.startDate=[date.target.value];\r\n        render (serverFilters);\r\n    })\r\n    \r\n      const HandleEndDateChange=(date=>{\r\n        serverFilters.endDate=[date.target.value];\r\n        render (serverFilters);\r\n    })\r\n  \r\n  return (\r\n\r\n    <div className='ChangesByParentIdWrapper'>\r\n      <div className=\"ChangesByParentId__Title\">Changes By Parent Id</div>\r\n     \r\n      {/* Select Filters */}\r\n\r\n      <form className=\"ChangesByParentId__Filters\">\r\n\r\n        <Select \r\n        name=\"fixVersion\"\r\n        options={fixVersionOptions} \r\n        placeholder=\"fix Version \" \r\n        className=\"ChangesByParentId__Filter\" \r\n        onChange={HandlefixVersionChange}\r\n        \r\n        />\r\n        \r\n        \r\n        <input \r\n        className=\"ChangesByParentId__Filter\" \r\n        type=\"date\" \r\n        name=\"startDate\" \r\n        onChange={HandleStartDateChange} \r\n        />\r\n\r\n        <input \r\n        className=\"ChangesByParentId__Filter\" \r\n        type=\"date\" \r\n        name=\"endDate\" \r\n        onChange={HandleEndDateChange} \r\n        />\r\n    \r\n      </form>\r\n      <div className=\"ChangesByParentId__Chart\">\r\n \r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ChangesByParentId;","import React from 'react';\r\nimport \"./DelaysInDelivery.css\";\r\nimport Select from 'react-select'\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nfunction DelaysInDelivery() {\r\n  const serverFilters = { fixVersion: [], jiraType: [], qaRepresentative: [], startDate: [], endDate: [], label: [\"weekly\"] };\r\n\r\n  // const [UiObjs, setUiObjs] = useState([]);\r\n\r\n  // Options To get From Server \r\n  const [fixVersionOptions, setfixVersionOptions] = useState([])\r\n  const [jiraTypeOptions, setJiraTypeOptions] = useState([])\r\n  const [qaRepresentativeOptions, setQaRepresentativeOptions] = useState([])\r\n\r\n  const labelOptions = [\r\n    { label: \"daily\" },\r\n    { label: \"weekly\" },\r\n    { label: \"monthly\" },\r\n    { label: \"yearly\" }\r\n  ];\r\n\r\n  // Functions ==> Fetch : \r\n  const render = (serverFilters) => {\r\n    fetch('/api/analytics/DelaysInDelivery/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(serverFilters),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => { console.log(data) })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('/api/analytics/')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        //set state (fix Versions => get all the options )\r\n        setfixVersionOptions(data);\r\n      })\r\n\r\n\r\n  })\r\n\r\n  const HandlefixVersionChange = (version => {\r\n\r\n    serverFilters.fixVersion = [version.label];\r\n\r\n\r\n    fetch('/api/analytics/ChangesInJiraTickets/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ fixVersion: serverFilters.fixVersion }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n            setJiraTypeOptions(data[0].Jira);\r\n            setQaRepresentativeOptions(data[0].QA);\r\n      })\r\n  })\r\n\r\n  const HandlejiraTypeChange = (type => {\r\n    serverFilters.JiraType = [type.label];\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleqaRepresentativeChange = (Qa => {\r\n    serverFilters.qaRepresentative = [Qa.label];\r\n    render(serverFilters);\r\n  })\r\n\r\n  const HandleStartDateChange = (date => {\r\n    serverFilters.startDate = [date.target.value];\r\n    render(serverFilters);\r\n  })\r\n  const HandleEndDateChange = (date => {\r\n    serverFilters.endDate = [date.target.value];\r\n    render(serverFilters);\r\n  })\r\n  const HandleLabelChange = (label => {\r\n    serverFilters.label = [label.label];\r\n    render(serverFilters);\r\n  })\r\n\r\n  return (\r\n\r\n    <div className='DelaysInDeliveryWrapper'>\r\n      <div className=\"DelaysInDelivery__Title\">Delays in Delivery</div>\r\n\r\n      {/* Select Filters */}\r\n\r\n      <form className=\"DelaysInDelivery__Filters\">\r\n\r\n        <Select\r\n          name=\"fixVersion\"\r\n          options={fixVersionOptions}\r\n          placeholder=\"fix Version \"\r\n          className=\"DelaysInDelivery__Filter\"\r\n          onChange={HandlefixVersionChange}\r\n\r\n        />\r\n\r\n        <Select\r\n          name=\"jiraType\"\r\n          isMulti\r\n          options={jiraTypeOptions}\r\n          placeholder=\"jira Type  \"\r\n          className=\"DelaysInDelivery__Filter\"\r\n          onChange={HandlejiraTypeChange}\r\n        />\r\n\r\n        <Select\r\n          name=\"qaRepresentative\"\r\n          isMulti\r\n          options={qaRepresentativeOptions}\r\n          placeholder=\"Qa Representative \"\r\n          className=\"DelaysInDelivery__Filter\"\r\n          onChange={HandleqaRepresentativeChange}\r\n        />\r\n\r\n        <input\r\n          className=\"DelaysInDelivery__Filter\"\r\n          type=\"date\"\r\n          name=\"startDate\"\r\n          onChange={HandleStartDateChange}\r\n        />\r\n\r\n        <input\r\n          className=\"DelaysInDelivery__Filter\"\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          onChange={HandleEndDateChange}\r\n        />\r\n\r\n        <Select\r\n          name=\"labels\"\r\n          options={labelOptions}\r\n          placeholder=\"Label\"\r\n          className=\"DelaysInDelivery__Filter\"\r\n          onChange={HandleLabelChange}\r\n        />\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default DelaysInDelivery;","import React from 'react';\r\nimport \"./MainPage.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n\r\n} from \"react-router-dom\";\r\nimport ModificationByField from \"../ModificationByField/ModificationByField\";\r\n// import DeletedJiraTickets from \"../DeletedJiraTickets/DeletedJiraTickets\";\r\nimport ChangesInJiraTickets from \"../ChangesInJiraTickets/ChangesInJiraTickets\";\r\nimport ChangesByParentId from \"../ChangesByParentId/ChangesByParentId\";\r\nimport DelaysInDelivery from \"../DelaysInDelivery/DelaysInDelivery\";\r\n\r\n\r\n\r\nfunction MainPage(props){\r\n\r\nreturn(\r\n  <Router>\r\n      <div>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"></link>\r\n        <nav>\r\n          <ul>\r\n\r\n          <li>\r\n              <Link className=\"MainForm__status--btn\" to=\"/ModificationByField\">ModificationByField</Link>\r\n\r\n            </li>\r\n\r\n            {/* <li>\r\n              <Link className=\"MainForm__status--btn\" to=\"/DeletedJiraTickets\">Deleted Jiras</Link>\r\n            </li>*/}\r\n            <li>\r\n              <Link className=\"MainForm__status--btn\" to=\"/ChangesInJiraTickets\">Changes In Jira Tickets</Link>\r\n            </li> \r\n            <li>\r\n              <Link className=\"MainForm__status--btn\" to=\"/ChangesInParentID\">Changes In Parent ID</Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"MainForm__status--btn\" to=\"/DelaysInDelivery\">Delays In Delivery</Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n        <Route path=\"/ModificationByField\">\r\n            <ModificationByField/>\r\n          </Route>\r\n          {/* <Route path=\"/DeletedJiraTickets\">\r\n            <DeletedJiraTickets/>\r\n          </Route>*/}\r\n          <Route path=\"/ChangesInJiraTickets\">\r\n             <ChangesInJiraTickets/>\r\n          </Route> \r\n          <Route path=\"/ChangesInParentID\">\r\n            <ChangesByParentId/>\r\n          </Route>\r\n          <Route path=\"/DelaysInDelivery\">\r\n          <DelaysInDelivery/>\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n  // <div className='MainForm'>\r\n\r\n  //     <div className=\"MainForm__status\">\r\n  //           <button className=\"MainForm__status--btn\"> Status </button>\r\n  //     </div>\r\n\r\n  //     <div className=\"MainForm__analytics\">\r\n  //           <button className=\"MainForm__analytics--btn\"> Analytics </button>\r\n  //     </div>\r\n\r\n    \r\n  //   <div className=\"MainForm__changesOfJiraTickets\">\r\n\r\n  //     <button className=\"MainForm__changesOfJiraTickets--btn\" onClick={()=>{\r\n  //       history.push('/aa')}}>   Changes Of Jira Tickets  </button>\r\n  //   </div>\r\n\r\n  //   <div className=\"MainForm__ModificationByField\">\r\n  //     <button className=\"MainForm__ModificationByField--btn\"> Changes Of Jira Tickets</button>\r\n  //   </div>\r\n\r\n  //   <div className=\"MainForm__DeletedJiraTickets\">\r\n  //     <button className=\"MainForm__DeletedJiraTickets--btn\"> Deleted Of Jira Tickets</button>\r\n  //   </div>\r\n    \r\n  //   <div className=\"MainForm__DelaysInDelievry\">\r\n  //     <button className=\"MainForm__DelaysInDelievry--btn\"> Delays Of Jira Tickets</button>\r\n  //   </div>\r\n\r\n\r\n  //   <Switch>\r\n\r\n  //         <Route path=\"/aa\">\r\n  //           <h1>Changes</h1>\r\n  //         </Route>\r\n\r\n  //         <Route path=\"/Modification\">\r\n  //         <h1>Modification</h1>\r\n  //         </Route>\r\n\r\n  //         <Route path=\"/Deleted\">\r\n  //           ssss\r\n  //         </Route>\r\n\r\n  //         <Route path=\"/Delays\">\r\n  //           ssss\r\n  //         </Route>\r\n\r\n  //   </Switch>\r\n\r\n\r\n  //   </div>\r\n\r\n\r\n \r\n  \r\n  // </Router>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default MainPage ;","import React from \"react\";\r\n\r\n//components\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport ForgetPassword from \"./view/pages/Admin/components/ForgetPassword/ForgetPassword\";\r\nimport StatusPage from \"./view/pages/Status/components/StatusPage/StatusPage\";\r\nimport MainPage from \"./view/pages/Analytics/components/mainPage/MainPage\";\r\nimport ModificationByField from \"./view/pages/Analytics/components/ModificationByField/ModificationByField\";\r\nimport DeletedJiraTickets from \"./view/pages/Analytics/components/DeletedJiraTickets/DeletedJiraTickets\";\r\nimport ChangesInJiraTickets from \"./view/pages/Analytics/components/ChangesInJiraTickets/ChangesInJiraTickets\";\r\nimport ChangesByParentId from \"./view/pages/Analytics/components/ChangesByParentId/ChangesByParentId\";\r\nimport DelaysInDelivery from \"./view/pages/Analytics/components/DelaysInDelivery/DelaysInDelivery\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // let location = useLocation();\r\n  // console.log(location);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@200;300;400;500;531;600;700;800&display=swap\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n        <Nav />\r\n        <div className=\"mainPage\">\r\n          <Switch>\r\n            <Route exact={true} path=\"/\">\r\n              <h1>login</h1>\r\n            </Route>\r\n            <Route path=\"/register\"></Route>\r\n            <Route path=\"/forgotPassword\">\r\n              <ForgetPassword></ForgetPassword>\r\n            </Route>\r\n            <Route path=\"/Admin\">\r\n              <h1>Admin</h1>\r\n            </Route>\r\n            <Route path=\"/status\">\r\n              <StatusPage />\r\n            </Route>\r\n            <Route path=\"/analysis\">\r\n              <MainPage />\r\n            </Route>\r\n\r\n            <Route path=\"/ModificationByField\">\r\n              <ModificationByField />\r\n            </Route>\r\n            <Route path=\"/DeletedJiraTickets\">\r\n              <DeletedJiraTickets />\r\n            </Route>\r\n            <Route path=\"/ChangesInJiraTickets\">\r\n              <ChangesInJiraTickets />\r\n            </Route>\r\n            <Route path=\"/ChangesInParentID\">\r\n              <ChangesByParentId />\r\n            </Route>\r\n            <Route path=\"/DelaysInDelivery\">\r\n              <DelaysInDelivery />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}